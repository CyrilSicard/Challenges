*> THE SAMPLE CODE BELOW OUTPUTS WHAT IS READ ON STDIN
*> use DISPLAY "Hello stderr world" UPON SYSERR to output debugging information to stderr
*>
*> Ce code est repris de la solution Python proposée
*>
IDENTIFICATION DIVISION.
PROGRAM-ID. APP.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.

    SELECT SYSIN ASSIGN TO KEYBOARD ORGANIZATION LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.

FD SYSIN.
01 ln PIC X(255).
    88 EOF VALUE HIGH-VALUES.

WORKING-STORAGE SECTION.

01 NB-STARTUP   PIC 9(02).

01.
    05  OCCURS 1 TO 60 TIMES DEPENDING ON NB-STARTUP INDEXED IDX-STARTUP.
        10  OCCURS 2 TIMES INDEXED BY IDX-THEME.
            15 INNOVATION    PIC X(128).

01 TMP-IDX  PIC 9(02).
01 WS-AVANT.
    05 OCCURS 2 TIMES INDEXED BY IDX-AVANT.
        10 DP-AVANT PIC 9(19).
01 REDEFINES WS-AVANT.
    05 AVANT    PIC 9(38).
01 WS-APRES.
    05 OCCURS 2 TIMES INDEXED BY IDX-APRES.
        10 DP-APRES PIC 9(19).
01 REDEFINES WS-APRES.
    05 APRES    PIC 9(38).

01 POSSIBILITES     PIC 9(38).
01 POSSIBILITES-AFF PIC Z(37)9.

PROCEDURE DIVISION.

    DISPLAY "===== START PROCEDURE =====" UPON SYSERR

    OPEN INPUT SYSIN
    READ SYSIN
      AT END SET EOF TO TRUE
    END-READ
    MOVE FUNCTION NUMVAL(ln) TO NB-STARTUP

    MOVE 1 TO IDX-STARTUP.
    READ SYSIN
      AT END SET EOF TO TRUE
    END-READ
    PERFORM UNTIL EOF

        UNSTRING ln DELIMITED BY SPACE INTO
            INNOVATION(IDX-STARTUP, 1)
            INNOVATION(IDX-STARTUP, 2)
        END-UNSTRING
        ADD 1 TO IDX-STARTUP

        READ SYSIN
            AT END SET EOF TO TRUE
        END-READ
    END-PERFORM
    CLOSE SYSIN

    MOVE 0 TO POSSIBILITES

    MOVE 1 TO DP-AVANT(1)
    MOVE 0 TO DP-AVANT(2)
    PERFORM VARYING IDX-STARTUP FROM 2 BY 1 UNTIL IDX-STARTUP > NB-STARTUP
        MOVE 0 TO DP-APRES(1)
        MOVE 0 TO DP-APRES(2)
        PERFORM VARYING IDX-AVANT FROM 1 BY 1 UNTIL IDX-AVANT > 2
            PERFORM VARYING IDX-APRES FROM 1 BY 1 UNTIL IDX-APRES > 2
                COMPUTE TMP-IDX = IDX-STARTUP - 1
                IF INNOVATION(TMP-IDX, IDX-AVANT) NOT = INNOVATION(IDX-STARTUP, IDX-APRES) THEN
                    ADD DP-AVANT(IDX-AVANT) TO DP-APRES(IDX-APRES)
                END-IF
            END-PERFORM
        END-PERFORM
        MOVE APRES TO AVANT
    END-PERFORM
    PERFORM VARYING IDX-THEME FROM 1 BY 1 UNTIL IDX-THEME > 2
        IF NB-STARTUP = 1 OR INNOVATION(1, 1) NOT = INNOVATION(NB-STARTUP, IDX-THEME) THEN
            ADD DP-AVANT(IDX-THEME) TO POSSIBILITES
        END-IF
    END-PERFORM

    MOVE 0 TO DP-AVANT(1)
    MOVE 1 TO DP-AVANT(2)
    PERFORM VARYING IDX-STARTUP FROM 2 BY 1 UNTIL IDX-STARTUP > NB-STARTUP
        MOVE 0 TO DP-APRES(1)
        MOVE 0 TO DP-APRES(2)
        PERFORM VARYING IDX-AVANT FROM 1 BY 1 UNTIL IDX-AVANT > 2
            PERFORM VARYING IDX-APRES FROM 1 BY 1 UNTIL IDX-APRES > 2
                COMPUTE TMP-IDX = IDX-STARTUP - 1
                IF INNOVATION(TMP-IDX, IDX-AVANT) NOT = INNOVATION(IDX-STARTUP, IDX-APRES) THEN
                    ADD DP-AVANT(IDX-AVANT) TO DP-APRES(IDX-APRES)
                END-IF
            END-PERFORM
        END-PERFORM
        MOVE APRES TO AVANT
    END-PERFORM
    PERFORM VARYING IDX-THEME FROM 1 BY 1 UNTIL IDX-THEME > 2
        IF NB-STARTUP = 1 OR INNOVATION(1, 2) NOT = INNOVATION(NB-STARTUP, IDX-THEME) THEN
            ADD DP-AVANT(IDX-THEME) TO POSSIBILITES
        END-IF
    END-PERFORM

    MOVE POSSIBILITES TO POSSIBILITES-AFF
    DISPLAY POSSIBILITES-AFF

    STOP RUN.
